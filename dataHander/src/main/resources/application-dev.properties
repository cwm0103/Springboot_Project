
server.port=1000
#mysql
spring.datasource.url=jdbc:mysql://10.39.12.254:3306/fannengdb?characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=Abcd1234
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

# datadb
custom.datasource.names=datadb
custom.datasource.datadb.driver-class-name=com.mysql.jdbc.Driver
custom.datasource.datadb.url=jdbc:mysql://10.39.12.254:3306/datadb?characterEncoding=UTF-8
custom.datasource.datadb.username=root
custom.datasource.datadb.password=Abcd1234
custom.datasource.datadb.type=com.alibaba.druid.pool.DruidDataSource


logging.path=./logs
#配置logging.level.*来具体输出哪些包的日志级别(放开可输出sql语句)
#logging.level.root=INFO
#catalina=Log

#pagehelper分页插件配置
pagehelper.helperDialect=phoenix
pagehelper.offsetAsPageNum=true
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql


#定时任务时间
#test
corn.test=0 0 0 * * ?;
#警告恢复
#corn.schedulerAlarmRecovery=0 0/1 * * * ?;

#https://www.cnblogs.com/linjiqin/archive/2013/07/08/3178452.html 参考文档
#定时抓取opt_data_col表数据
corn.RealDataByCodes=0 0 0 * * ?;

#站能源数据汇总
#corn.SiteEnergyDataSummary=0 0 0 * * ?;
corn.SiteEnergyDataSummary=0 0 0 * * ?;


###########################光伏接口url###################################
PV.url= http://se-api-ennwifi-dev.ipaas.enncloud.cn/v1/ammeter/data/query/first/last


#================================测试使用================================
corn.hour=0 0/2 * * * ?;
corn.day=0 0/10 * * * ?;
corn.month=0 0 0/2 * * ?;
corn.year=0 0 0 0/1 * ?;

#日级数据计算
corn.DayEnergyDataSummary=0 0 0 * * ?;
#小时级数据计算
corn.hourDataSummary=0 0 0 * * ?
#年级数据计算
corn.YearDataSummary=0 0 0 * * ?;

corn.handlerMonth=0 0 0 * * ?;


opentsdb.url=http://10.37.48.235:8080/api/query
opentsdb.suggest.url=http://tsdb.rest.enn.cn:8080/api/suggest

corn.handlerMixHour=0 0/2 * * * ?;
corn.handlerMixDay=0 0/5 * * * ?;
corn.handlerMixMonth=0 0/7 * * * ?;
corn.handlerMixYear=0 0/30 * * * ?;

staIds=1009,1004,1016,1015,1006,1012
